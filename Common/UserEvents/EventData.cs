// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace UserEvents
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct EventData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static EventData GetRootAsEventData(ByteBuffer _bb) { return GetRootAsEventData(_bb, new EventData()); }
  public static EventData GetRootAsEventData(ByteBuffer _bb, EventData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VerifyEventData(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("", false, EventDataVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EventData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Timestamp { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public UserEvents.EventType DataType { get { int o = __p.__offset(6); return o != 0 ? (UserEvents.EventType)__p.bb.Get(o + __p.bb_pos) : UserEvents.EventType.NONE; } }
  public TTable? Data<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o + __p.bb_pos) : null; }
  public UserEvents.C2S_Login DataAsC2S_Login() { return Data<UserEvents.C2S_Login>().Value; }
  public UserEvents.S2C_Login DataAsS2C_Login() { return Data<UserEvents.S2C_Login>().Value; }
  public UserEvents.C2S_PlayerMoveData DataAsC2S_PlayerMoveData() { return Data<UserEvents.C2S_PlayerMoveData>().Value; }
  public UserEvents.S2C_PlayerMoveData DataAsS2C_PlayerMoveData() { return Data<UserEvents.S2C_PlayerMoveData>().Value; }
  public UserEvents.C2S_Logout DataAsC2S_Logout() { return Data<UserEvents.C2S_Logout>().Value; }
  public UserEvents.S2C_Logout DataAsS2C_Logout() { return Data<UserEvents.S2C_Logout>().Value; }

  public static Offset<UserEvents.EventData> CreateEventData(FlatBufferBuilder builder,
      ulong timestamp = 0,
      UserEvents.EventType data_type = UserEvents.EventType.NONE,
      int dataOffset = 0) {
    builder.StartTable(3);
    EventData.AddTimestamp(builder, timestamp);
    EventData.AddData(builder, dataOffset);
    EventData.AddDataType(builder, data_type);
    return EventData.EndEventData(builder);
  }

  public static void StartEventData(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddTimestamp(FlatBufferBuilder builder, ulong timestamp) { builder.AddUlong(0, timestamp, 0); }
  public static void AddDataType(FlatBufferBuilder builder, UserEvents.EventType dataType) { builder.AddByte(1, (byte)dataType, 0); }
  public static void AddData(FlatBufferBuilder builder, int dataOffset) { builder.AddOffset(2, dataOffset, 0); }
  public static Offset<UserEvents.EventData> EndEventData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<UserEvents.EventData>(o);
  }
  public static void FinishEventDataBuffer(FlatBufferBuilder builder, Offset<UserEvents.EventData> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedEventDataBuffer(FlatBufferBuilder builder, Offset<UserEvents.EventData> offset) { builder.FinishSizePrefixed(offset.Value); }
}


static public class EventDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Timestamp*/, 8 /*ulong*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*DataType*/, 1 /*UserEvents.EventType*/, 1, false)
      && verifier.VerifyUnion(tablePos, 6, 8 /*Data*/, UserEvents.EventTypeVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
